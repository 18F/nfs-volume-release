#!/bin/bash

set -e -x

scripts_path=./$(dirname $0)
eval $($scripts_path/get_paths.sh)

NFS_ACCEPTANCE_DIR=$NFS_RELEASE_DIR/tmp
NFS_SERVER_IP=nfs.persi.cf-app.com

listen_address=0.0.0.0:7589

mkdir -p ~/voldriver_plugins
drivers_path=$(realpath ~/voldriver_plugins)

if [ "$TRANSPORT" == "tcp" ]
    then
        listen_address=0.0.0.0:7589
        driver_address=http://$listen_address
else
    listen_address=$drivers_path/nfsv3driver.sock
    driver_address=$drivers_path/nfsv3driver.sock
fi

mkdir -p $NFS_RELEASE_DIR/tmp

echo "{
  \"volman_driver_path\": \"~/voldriver_plugins\",
  \"driver_address\": \"$driver_address\",
  \"driver_name\": \"nfsv3driver\",
  \"create_config\": {
    \"Name\": \"nfs-volume-name\",
    \"Opts\": {
      \"ip\":\"nfs://$NFS_SERVER_IP/export/users/\",
      \"local_mount_point\":\"$NFS_ACCEPTANCE_DIR/mountdir\",
      \"remote_mount_point\":\"\"}
  }
} "  > $NFS_RELEASE_DIR/tmp/fixture.json

export FIXTURE_FILENAME="$NFS_RELEASE_DIR/tmp/fixture.json"

cd `dirname $0`
cd ../src/code.cloudfoundry.org/nfsv3driver

go build -o "$NFS_RELEASE_DIR/tmp/nfsv3driver" "cmd/nfsv3driver/main.go"

go get -t code.cloudfoundry.org/volume_driver_cert

killall -9 nfsv3driver || true

mkdir -p $NFS_RELEASE_DIR/tmp/mountdir

$NFS_RELEASE_DIR/tmp/nfsv3driver -listenAddr="$listen_address" -transport="$TRANSPORT" -driversPath="$drivers_path" &

pushd $NFS_RELEASE_DIR/src/code.cloudfoundry.org/volume_driver_cert
    ginkgo
popd

killall -9 nfsv3driver || true

rm -f $NFS_RELEASE_DIR/tmp/nfsv3driver
