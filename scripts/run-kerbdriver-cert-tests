#!/bin/bash

set -e -x

scripts_path=./$(dirname $0)
eval $($scripts_path/get_paths.sh)

NFS_ACCEPTANCE_DIR=$NFS_RELEASE_DIR/tmp
mkdir -p NFS_ACCEPTANCE_DIR

mkdir -p $NFS_ACCEPTANCE_DIR/voldriver_plugins

mkdir -p $NFS_ACCEPTANCE_DIR/mountdir

listen_address=0.0.0.0:8669

if [ "$TRANSPORT" == "tcp" ]
    then
        listen_address=0.0.0.0:8669
        driver_address=http://$listen_address
else
    listen_address=$NFS_ACCEPTANCE_DIR/voldriver_plugins/kerbdriver.sock
    driver_address=$NFS_ACCEPTANCE_DIR/voldriver_plugins/kerbdriver.sock
fi

echo "{
  \"volman_driver_path\": \"$NFS_ACCEPTANCE_DIR/voldriver_plugins\",
  \"driver_address\": \"$driver_address\",
  \"driver_name\": \"kerbdriver\",
  \"create_config\": {
    \"Name\": \"kerb-volume-name\",
    \"Opts\": {
      \"source\":\"$SOURCE\",
      \"local_mount_point\":\"$NFS_ACCEPTANCE_DIR/mountdir\",
      \"kerberosPrincipal\":/"share1@PERSI.CF-APP.COM/",
      \"kerberosKeytab\":\"$KEYTAB\",
      \"mode\":\"1\"}
  }
} "  > $NFS_ACCEPTANCE_DIR/kerb-fixture.json

export FIXTURE_FILENAME="$NFS_ACCEPTANCE_DIR/kerb-fixture.json"

cd `dirname $0`
cd ../src/code.cloudfoundry.org/kerbdriver

go build -o "$NFS_ACCEPTANCE_DIR/kerbdriver" "cmd/kerbdriver/main.go"

go get -t code.cloudfoundry.org/volume_driver_cert

killall -9 kerbdriver || true

$NFS_ACCEPTANCE_DIR/kerbdriver -listenAddr="$listen_address" -transport="$TRANSPORT" -driversPath="$NFS_ACCEPTANCE_DIR/voldriver_plugins" &

pushd $NFS_RELEASE_DIR
    ginkgo -v -keepGoing src/code.cloudfoundry.org/volume_driver_cert
popd

killall -9 kerbdriver || true

rm -f $NFS_ACCEPTANCE_DIR/kerbdriver
