#!/bin/bash
# vim: set ft=sh

set -e -x

scripts_path=./$(dirname $0)/..
eval $($scripts_path/get_paths.sh)

if [ "$(uname)" == "Darwin" ]; then
    export GOPATH=`greadlink -f ${scripts_path}/..`
else
    export GOPATH=`readlink -f ${scripts_path}/..`
fi
export PATH=$GOPATH/bin:$PATH

source ${scripts_path}/ci/utils.sh
check_param CF_USERNAME
check_param CF_API_ENDPOINT
check_param APPS_DOMAIN
check_param SERVICE_NAME
check_param PLAN_NAME
check_param BROKER_URL
check_param BROKER_USER
check_param SERVER_ADDRESS
check_param SHARE
check_param CREATE_CONFIG
check_param BIND_CONFIG
check_param CREATE_BOGUS_CONFIG
check_param BIND_BOGUS_CONFIG
check_param TEST_MULTI_CELL
check_param TEST_MOUNT_OPTIONS
check_param TEST_READ_ONLY
check_param TEST_MOUNT_FAIL_LOGGING
check_param PARALLEL_NODES

if [ -z "$APPLICATION_PATH" ]; then
    echo "APPLICATION_PATH cannot be blank"
    exit 1
fi

# CF_PASSWORD and BROKER_PASSWORD can either be passed in as environment variables, or extracted from a deployment-vars file
# in environments where they are dynamically generated by BOSH
if [ -z "$CF_PASSWORD" ]; then
    if [ -e "vars-store/deployment-vars.yml" ]; then
        CF_PASSWORD=`grep cf_admin_password vars-store/deployment-vars.yml | awk  '{print $2}'`
    fi
fi
if [ -z "$BROKER_PASSWORD" ]; then
    if [ -e "vars-store/deployment-vars.yml" ]; then
        BROKER_PASSWORD=`grep $BROKER_PASSWORD_KEY vars-store/deployment-vars.yml | awk  '{print $2}'`
    fi
fi

pushd ${scripts_path}/../src/code.cloudfoundry.org/nfsbroker
  GOOS=linux GOARCH=amd64 go build -o bin/nfsbroker
  export BROKER_APPLICATION_PATH=$PWD
popd

go get github.com/onsi/ginkgo/ginkgo

PARALLEL_NODES=${PARALLEL_NODES} ${scripts_path}/run-pats \
${CF_USERNAME} \
${CF_PASSWORD} \
${CF_API_ENDPOINT} \
${APPS_DOMAIN} \
${SERVICE_NAME} \
${PLAN_NAME} \
${BROKER_URL} \
${BROKER_USER} \
${BROKER_PASSWORD} \
${CREATE_CONFIG} \
${BIND_CONFIG} \
${CREATE_BOGUS_CONFIG} \
${BIND_BOGUS_CONFIG} \
${TEST_ISOLATION_SEGMENT}
